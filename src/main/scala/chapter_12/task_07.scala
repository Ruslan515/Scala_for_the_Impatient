/*
Получить последовательность пар очень просто, например
val pairs = (1 to 10) zip (11 to 20)
Теперь представьте, что необходимо что-то сделать с такой
последовательностью, например вычислить суммы значений
элементов пар. Для этой цели нельзя использовать
pairs.map(_ + _)
Функция _ + _ принимает два параметра типа Int, а не пару
(Int, Int). Напишите функцию adjustToPair, принимающую
функцию типа (Int, Int) => Int и возвращающую эквивалент-
ную функцию, оперирующую парой. Например, вызов
adjustToPair(_ * _)((6, 7)) должен вернуть 42.
 */
package chapter_12

object task_07 extends App {
    def adjustToPair(fun: (Int, Int) => Int) = (x: (Int, Int)) => fun(x._1, x._2)

    assert(adjustToPair(_ * _)((6, 7)) == 42)
    println(adjustToPair(_ * _)((6, 7)))


}
